{"version":3,"sources":["../webpack/universalModuleDefinition","../webpack/bootstrap 014c3a1d8e9ab69af2be",".././src/FuzzyTree.js","../external {\"root\":\"_\",\"commonjs2\":\"lodash\",\"commonjs\":\"lodash\",\"amd\":\"lodash\"}"],"names":[],"mappings":"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","file":"dist/FuzzyTree.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"lodash\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"lodash\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FuzzyTree\"] = factory(require(\"lodash\"));\n\telse\n\t\troot[\"FuzzyTree\"] = factory(root[\"_\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 014c3a1d8e9ab69af2be\n **/","/* jshint esnext:true */\n\nimport {\n    isString as _isString,\n    isArray as _isArray,\n    lastIndexOf as _lastIndexOf,\n    keys as _keys,\n    forEach as _forEach,\n    every as _every,\n    some as _some\n} from 'lodash';\n\nclass FuzzyTree{\n\n    /**\n     * Construct a new FuzzyTree node.\n     */\n    constructor(){\n        this._separator = '.';\n        this._wildcard = '*';\n        this._greedy = '#';\n        // reset data, children and dummy:\n        this.reset();\n    }\n\n    /**\n     * Remove this node's data and children.\n     * @return {FuzzyTree} The node itself.\n     */\n    reset(){\n        this._data = null;\n        this._children = {};\n        this._dummy = false;\n        return this;\n    }\n\n    /**\n     * Set this node's data.\n     * @param {*} data The data to set.\n     * @return {FuzzyTree} The node itself.\n     */\n    setData(data){\n        this._data = data;\n        return this;\n    }\n\n    /**\n     * Get this node's data.\n     * @return {*} This node's data.\n     */\n    getData(){\n        return this._data;\n    }\n\n    /**\n     * Gather all the nodes in this tree who's path pattern matches the given\n     * path.\n     * @param  {String|Array} path The path to match against.\n     * @return {Array} An array of FuzzyTree nodes who's path pattern matches\n     * the given path.\n     */\n    match(path){\n        if (_isString(path)) path = path.split(this._separator);\n        if (!_isArray(path))\n            throw Error(\"path must be an array or a string\");\n        if (!_every(path, _isString))\n            throw Error(\"all path sections must be strings\");\n        if (_some(path, s => s.length === 0))\n            throw Error(\"path section cannot be empty\");\n        if (_some(path, s => s === this._wildcard || s === this._greedy))\n            throw Error(\"path section cannot be a wildcard\");\n\n        return this._match(path);\n    }\n\n    _match(path){\n        var res = [], child, that = this;\n\n        if (!path.length && !this._dummy) {\n            // if the path is empty, return the node itself.\n            res.push(this);\n        } else {\n            // if the path to one of the children is equal to the next section\n            // in the requested path, traverse this child.\n            child = this._children[path[0]];\n            if (child)\n                _push(res, child._match(path.slice(1)));\n\n            // if one of the children's path pattern is a wildcard, it also\n            // matches the next section of the requested path. traverse it too.\n            child = this._children[this._wildcard];\n            if (child)\n                _push(res, child._match(path.slice(1)));\n\n            // if one of the children's path pattern is a greedy wildcard,\n            // traverse this child with all possible sub-paths of the requested\n            // path.\n            child = this._children[this._greedy];\n            if (child)\n                traverseGreedy(child);\n        }\n\n        function traverseGreedy(child){\n            var grandchilds = _keys(child._children),\n                wildcard = child._wildcard,\n                greedy = child._greedy;\n            _push(res, child._match([]));\n            _forEach(grandchilds, gc => {\n                if (gc === wildcard) {\n                    // consume as much as possible, only if at least two left\n                    traverseGreedy(child._children[wildcard]);\n                } else if (gc === greedy) {\n                    // consume one and move on\n                    _push(res, child._match(path.slice(1)));\n                } else {\n                    // we need to consume as much as possible from the path\n                    var i = _lastIndexOf(path.slice(1), gc);\n                    if (i > -1){\n                        _push(res, child._match(path.slice(i + 1)));\n                    }\n                }\n            });\n        }\n\n        return res;\n    }\n\n    /**\n     * Find the node under a specific path pattern.\n     * @param  {String|Array} path The path pattern of the required node.\n     * @return {FuzzyTree|Null} The found node, or null if not found.\n     */\n    find(path){\n        if (_isString(path)) path = path.split(this._separator);\n        if (!_isArray(path))\n            throw Error(\"path must be an array or a string\");\n        if (!_every(path, _isString))\n            throw Error(\"all path sections must be strings\");\n        if (_some(path, s => s.length === 0))\n            throw Error(\"path section cannot be empty\");\n\n        return this._find(path);\n    }\n\n    _find(path){\n        if (!path.length) return this._dummy ? null : this;\n        if (!this._children[path[0]]) return null;\n\n        return this._children[path[0]]._find(path.slice(1));\n    }\n\n    /**\n     * Insert a node under the specified path pattern. New nodes will be created\n     * along the way if needed. If a node already exists under this path pattern\n     * it will be resetted.\n     * @param  {String|Array} path The path pattern of the new node.\n     * @return {FuzzyTree} The newly created node.\n     */\n    insert(path){\n        if (_isString(path)) path = path.split(this._separator);\n        if (!_isArray(path))\n            throw Error(\"path must be an array or a string\");\n        if (!_every(path, _isString))\n            throw Error(\"all path sections must be strings\");\n        if (_some(path, s => s.length === 0))\n            throw Error(\"path section cannot be empty\");\n\n        return this._insert(path);\n    }\n\n    _insert(path){\n        if (!path.length){\n            if (this._dummy) {\n                this._dummy = false;\n                return this;\n            }\n            return this.reset();\n        }\n\n        if (!this._children[path[0]]){\n            // create a dummy node along the path\n            this._children[path[0]] = new FuzzyTree();\n            this._children[path[0]]._dummy = true;\n        }\n\n        return this._children[path[0]]._insert(path.slice(1));\n    }\n}\n\nfunction _push(target, elements){\n    _forEach(elements, e => target.push(e));\n}\n\nexport default FuzzyTree;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/FuzzyTree.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"root\":\"_\",\"commonjs2\":\"lodash\",\"commonjs\":\"lodash\",\"amd\":\"lodash\"}\n ** module id = 1\n ** module chunks = 0\n **/"],"sourceRoot":""}